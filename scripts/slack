#!/usr/bin/env perl
use strict; use warnings;
use FindBin;
use lib "$FindBin::RealBin/../lib/perl5", "$FindBin::RealBin/../lib";
use Getopt::Long;
use API::Slack;
use Ticket qw/parse_ticket/;

my %O;
my $rtfm = not GetOptions(
    'h|help+'       => \$O{help},
    'k|keys=s@'     => \$O{keys},
);

sub rtfm {
    print "usage:\nslack CHANNEL MESSAGE... [-k KEYS ...]\n";
    exit $_[0];
}

if ($O{help}) {
    # require Pod::Usage;
    # Pod::Usage::pod2usage({-verbose => $O{help}-1, -exitval => $rtfm});
    rtfm($O{help});
}

my ($channel, @msg) = @ARGV;

if (! @msg) {
    if (-p STDIN) {
        # do not bother recipient with partial messages
        # slurp and send just one message
        @msg = <STDIN>;
    } else {
        rtfm(1);
    }
}

my $msg = join ' ', @msg;
exit 1 unless $msg;

my %opts;
my @keys = map { parse_ticket($_) } map {split ',', $_} @{$O{keys}};
if (@keys) {
    $opts{attachments} = API::Slack::attachments_from_keys(@keys);
}

API::Slack::chat($channel, $msg, %opts);
